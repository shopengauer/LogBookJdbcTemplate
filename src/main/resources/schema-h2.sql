
DROP SCHEMA IF EXISTS USERS;
DROP SCHEMA IF EXISTS SYSTEM;

DROP SEQUENCE IF EXISTS USERS_SEQUENCE;


CREATE SCHEMA IF NOT EXISTS USERS;
CREATE SCHEMA IF NOT EXISTS SYSTEM;
CREATE SEQUENCE IF NOT EXISTS USERS_SEQUENCE;

CREATE TABLE IF NOT EXISTS USERS.DEPARTMENT (
  DEPARTMENT_ID   INT,
  DEPARTMENT_NAME VARCHAR(60) NOT NULL,
  CONSTRAINT PK_DEPARTMENT_ID PRIMARY KEY (DEPARTMENT_ID),
  CONSTRAINT UN_DEPARTMENT_NAME UNIQUE (DEPARTMENT_NAME)
);

CREATE TABLE IF NOT EXISTS USERS.JOBTITLE (
  JOBTITLE_ID   INT,
  JOBTITLE_NAME VARCHAR(60) NOT NULL,
  CONSTRAINT PK_JOBTITLE_ID PRIMARY KEY (JOBTITLE_ID),
  CONSTRAINT UN_JOBTITLE_NAME UNIQUE (JOBTITLE_NAME)
);

CREATE TABLE IF NOT EXISTS USERS.ORGANIZATION (
  ORGANIZATION_ID   INT,
  ORGANIZATION_NAME VARCHAR(60) NOT NULL,
  ORGANIZATION_DESC VARCHAR(256),
  CONSTRAINT PK_ORGANIZATION_ID PRIMARY KEY (ORGANIZATION_ID),
  CONSTRAINT UN_ORGANIZATION_NAME UNIQUE (ORGANIZATION_NAME)
);

CREATE TABLE IF NOT EXISTS USERS.LOGBOOK_USER_ROLE_DICTIONARY (
  LOGBOOK_USER_ROLE_ID   INT DEFAULT NEXTVAL('USERS_SEQUENCE'),
  LOGBOOK_USER_ROLE_NAME VARCHAR(45) NOT NULL,
  LOGBOOK_USER_ROLE_DESC VARCHAR(256),
  CONSTRAINT PK_LOGBOOK_USER_ROLE_ID PRIMARY KEY (LOGBOOK_USER_ROLE_ID),
  CONSTRAINT UN_LOGBOOK_USER_ROLE_NAME UNIQUE (LOGBOOK_USER_ROLE_NAME)

);

CREATE TABLE IF NOT EXISTS USERS.LOGBOOK_USER (
  LOGBOOK_USER_ID            INT,
  LOGBOOK_USER_NAME          VARCHAR(60),
  LOGBOOK_USER_FIRSTNAME     VARCHAR(60) NOT NULL,
  LOGBOOK_USER_LASTNAME      VARCHAR(60) NOT NULL,
  LOGBOOK_USER_PASSWORD      VARCHAR(60),
  LOGBOOK_USER_CERTIFICATE BLOB,
  LOGBOOK_USER_ORGANIZATION_ID INT,
  LOGBOOK_USER_DEPARTMENT_ID INT,
  LOGBOOK_USER_JOBTITLE_ID   INT,
  CONSTRAINT PK_LOGBOOK_USER_ID PRIMARY KEY (LOGBOOK_USER_ID),
  CONSTRAINT UN_LOGBOOK_USER_NAME UNIQUE (LOGBOOK_USER_NAME),
  CONSTRAINT FK_LOGBOOK_USER_ORGANIZATION_ID FOREIGN KEY (LOGBOOK_USER_ORGANIZATION_ID)
  REFERENCES USERS.ORGANIZATION(ORGANIZATION_ID),
  CONSTRAINT FK_LOGBOOK_USER_DEPARTMENT_ID FOREIGN KEY (LOGBOOK_USER_DEPARTMENT_ID)
  REFERENCES USERS.DEPARTMENT(DEPARTMENT_ID),
  CONSTRAINT FK_LOGBOOK_USER_JOBTITLE_ID FOREIGN KEY (LOGBOOK_USER_JOBTITLE_ID)
  REFERENCES USERS.JOBTITLE(JOBTITLE_ID)
);

CREATE TABLE IF NOT EXISTS USERS.LOGBOOK_USER_ROLE(
  LOGBOOK_USER_ROLE_ENTRY_ID INT,
  LOGBOOK_USER_ID INT,
  LOGBOOK_USER_ROLE_ID INT,
  CONSTRAINT PK_LOGBOOK_USER_ROLE_ENTRY_ID PRIMARY KEY (LOGBOOK_USER_ROLE_ENTRY_ID),
  CONSTRAINT UN_LOGBOOK_USER_USER_ROLE UNIQUE (LOGBOOK_USER_ID,LOGBOOK_USER_ROLE_ID),
  CONSTRAINT FK_LOGBOOK_USER_ID1 FOREIGN KEY (LOGBOOK_USER_ID) REFERENCES USERS.LOGBOOK_USER(LOGBOOK_USER_ID),
  CONSTRAINT FK_LOGBOOK_USER_ROLE_ID FOREIGN KEY (LOGBOOK_USER_ROLE_ID) REFERENCES USERS.LOGBOOK_USER_ROLE_DICTIONARY(LOGBOOK_USER_ROLE_ID)
  );




CREATE TABLE IF NOT EXISTS SYSTEM.AAS_SYSTEM ( -- СИСТЕМА
  AAS_SYSTEM_ID INT,
  AAS_SYSTEM_NAME VARCHAR(60) NOT NULL,
  AAS_SYSTEM_DESCRIPTION VARCHAR(256) NOT NULL,
  CUSTOMER_ORGANIZATION_ID INT NOT NULL,
  DEVELOPER_ORGANIZATION_ID INT NOT NULL,
  LOGBOOK_USER_MAKE_ENTRY_ID INT NOT NULL,
  INSERT_TIME DATE DEFAULT CURRENT_DATE() NOT NULL,
  UPDATE_TIME DATE,
  CONSTRAINT PK_AAS_SYSTEM_ID PRIMARY KEY (AAS_SYSTEM_ID),
  CONSTRAINT UN_SYSTEM_NAME UNIQUE (AAS_SYSTEM_NAME),
  CONSTRAINT FK_CUSTOMER_ORGANIZATION_ID FOREIGN KEY (CUSTOMER_ORGANIZATION_ID)
    REFERENCES USERS.ORGANIZATION(ORGANIZATION_ID),
  CONSTRAINT FK_DEVELOPER_ORGANIZATION_ID FOREIGN KEY (DEVELOPER_ORGANIZATION_ID)
    REFERENCES USERS.ORGANIZATION(ORGANIZATION_ID),
  CONSTRAINT FK_LOGBOOK_USER_MAKE_ENTRY_ID1 FOREIGN KEY (LOGBOOK_USER_MAKE_ENTRY_ID)
  REFERENCES USERS.LOGBOOK_USER(LOGBOOK_USER_ID)
);

CREATE TABLE IF NOT EXISTS SYSTEM.AAS_SYSTEM_COMMISSION_MEMBER( -- ЧЛЕНЫ КОММИССИИ ПРОИЗВОДЯЩИЕ ПРИЕМКУ СИСТЕМЫ(ТАКЖЕ ПРЕДСЕДАТЕЛЬ)

  COMMISSION_MEMBER_ID INT,
  AAS_SYSTEM_ID INT NOT NULL,
  LOGBOOK_USER_ID INT NOT NULL,
  DIGITAL_SIGN BLOB,
  LOGBOOK_USER_MAKE_ENTRY_ID INT NOT NULL,
  INSERT_TIME DATE DEFAULT CURRENT_DATE() NOT NULL,
  UPDATE_TIME DATE,
  CONSTRAINT PK_COMMISSION_ID PRIMARY KEY (COMMISSION_MEMBER_ID),
  CONSTRAINT FK_AAS_SYSTEM_ID1 FOREIGN KEY (AAS_SYSTEM_ID)
  REFERENCES SYSTEM.AAS_SYSTEM(AAS_SYSTEM_ID),
  CONSTRAINT FK_LOGBOOK_USER_ID2 FOREIGN KEY (LOGBOOK_USER_ID) REFERENCES USERS.LOGBOOK_USER(LOGBOOK_USER_ID),
  CONSTRAINT FK_LOGBOOK_USER_MAKE_ENTRY_ID2 FOREIGN KEY (LOGBOOK_USER_MAKE_ENTRY_ID)
  REFERENCES USERS.LOGBOOK_USER(LOGBOOK_USER_ID)
);

CREATE TABLE IF NOT EXISTS SYSTEM.AAS_SYSTEM_COMMISSION_WORK_TIME( --  Период работы комиссии

  WORK_TIME_ID INT,
  AAS_SYSTEM_ID INT,
  WORK_TIME_START_DATE DATE,
  WORK_TIME_END_DATE DATE,
  CONCLUSION VARCHAR(256) NOT NULL,
  LOGBOOK_USER_MAKE_ENTRY_ID INT,
  INSERT_TIME DATE DEFAULT CURRENT_DATE() NOT NULL,
  UPDATE_TIME DATE,
  CONSTRAINT PK_WORK_TIME_ID PRIMARY KEY (WORK_TIME_ID),
  CONSTRAINT UN_AAS_SYSTEM_ID UNIQUE (AAS_SYSTEM_ID),
  CONSTRAINT FK_AAS_SYSTEM_ID2 FOREIGN KEY (AAS_SYSTEM_ID)
  REFERENCES SYSTEM.AAS_SYSTEM(AAS_SYSTEM_ID),
  CONSTRAINT FK_LOGBOOK_USER_MAKE_ENTRY_ID3 FOREIGN KEY (LOGBOOK_USER_MAKE_ENTRY_ID)
  REFERENCES USERS.LOGBOOK_USER(LOGBOOK_USER_ID)
);



