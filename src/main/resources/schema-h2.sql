
DROP SCHEMA IF EXISTS USERS;
DROP SEQUENCE IF EXISTS USERS_SEQUENCE;


CREATE SCHEMA IF NOT EXISTS USERS;
CREATE SEQUENCE IF NOT EXISTS USERS_SEQUENCE;

CREATE TABLE IF NOT EXISTS USERS.DEPARTMENT(DEPARTMENT_ID INT, DEPARTMENT_NAME VARCHAR(60) NOT NULL,
                                      CONSTRAINT PK_DEPARTMENT_ID PRIMARY KEY (DEPARTMENT_ID),
                                      CONSTRAINT UN_DEPARTMENT_NAME UNIQUE (DEPARTMENT_NAME)
                                      );

CREATE TABLE IF NOT EXISTS USERS.JOBTITLE(JOBTITLE_ID INT, JOBTITLE_NAME VARCHAR(60) NOT NULL,
                                          CONSTRAINT PK_JOBTITLE_ID PRIMARY KEY (JOBTITLE_ID),
                                          CONSTRAINT UN_JOBTITLE_ID UNIQUE (JOBTITLE_ID)
                                          );

CREATE TABLE IF NOT EXISTS USERS.ORGANIZATION(ORGANIZATION_ID INT,
                                              ORGANIZATION_NAME VARCHAR(60) NOT NULL,
                                              ORGANIZATION_DESC VARCHAR(256),
                                              CONSTRAINT PK_ORGANIZATION_ID PRIMARY KEY (ORGANIZATION_ID),
                                              CONSTRAINT UN_ORGANIZATION_NAME UNIQUE (ORGANIZATION_NAME)
);

CREATE TABLE IF NOT EXISTS USERS.LOGBOOK_USER_ROLE_DICTIONARY(LOGBOOK_USER_ROLE_ID INT DEFAULT NEXTVAL('USERS_SEQUENCE'),
                                                   LOGBOOK_USER_ROLE_NAME VARCHAR(45) NOT NULL,
                                                   LOGBOOK_USER_ROLE_DESC VARCHAR(256),
                                                   CONSTRAINT PK_LOGBOOK_USER_ROLE_ID PRIMARY KEY (LOGBOOK_USER_ROLE_ID),
                                                   CONSTRAINT UN_LOGBOOK_USER_ROLE_NAME UNIQUE (LOGBOOK_USER_ROLE_NAME)

);

CREATE TABLE IF NOT EXISTS USERS.LOGBOOK_USER (
  LOGBOOK_USER_ID            INT,
  LOGBOOK_USER_NAME          VARCHAR(60),
  LOGBOOK_USER_FIRSTNAME     VARCHAR(60) NOT NULL,
  LOGBOOK_USER_LASTNAME      VARCHAR(60) NOT NULL,
  LOGBOOK_USER_PASSWORD      VARCHAR(60),
  LOGBOOK_USER_ORGANIZATION_ID INT,
  LOGBOOK_USER_DEPARTMENT_ID INT,
  LOGBOOK_USER_JOBTITLE_ID   INT,
  CONSTRAINT PK_LOGBOOK_USER_ID PRIMARY KEY (LOGBOOK_USER_ID),
  CONSTRAINT UN_LOGBOOK_USER_NAME UNIQUE (LOGBOOK_USER_NAME),
  CONSTRAINT FK_LOGBOOK_USER_ORGANIZATION_ID FOREIGN KEY (LOGBOOK_USER_ORGANIZATION_ID)
  REFERENCES USERS.ORGANIZATION(ORGANIZATION_ID),
  CONSTRAINT FK_LOGBOOK_USER_DEPARTMENT_ID FOREIGN KEY (LOGBOOK_USER_DEPARTMENT_ID)
  REFERENCES USERS.DEPARTMENT(DEPARTMENT_ID),
  CONSTRAINT FK_LOGBOOK_USER_JOBTITLE_ID FOREIGN KEY (LOGBOOK_USER_JOBTITLE_ID)
  REFERENCES USERS.JOBTITLE(JOBTITLE_ID)
);

CREATE TABLE IF NOT EXISTS USERS.LOGBOOK_USER_ROLE(
  LOGBOOK_USER_ROLE_ENTRY_ID INT,
  LOGBOOK_USER_ID INT,
  LOGBOOK_USER_ROLE_ID INT,
  CONSTRAINT PK_LOGBOOK_USER_ROLE_ENTRY_ID PRIMARY KEY (LOGBOOK_USER_ROLE_ENTRY_ID),
  CONSTRAINT UN_LOGBOOK_USER_USER_ROLE UNIQUE (LOGBOOK_USER_ID,LOGBOOK_USER_ROLE_ID),
  CONSTRAINT FK_LOGBOOK_USER_ID FOREIGN KEY (LOGBOOK_USER_ID) REFERENCES USERS.LOGBOOK_USER(LOGBOOK_USER_ID),
  CONSTRAINT FK_LOGBOOK_USER_ROLE_ID FOREIGN KEY (LOGBOOK_USER_ROLE_ID) REFERENCES USERS.LOGBOOK_USER_ROLE_DICTIONARY(LOGBOOK_USER_ROLE_ID)
  );





